<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.zking.model.User" >
    <constructor >
      <idArg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="realName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="salt" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="locked" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_datetime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>

<resultMap id="row" type="com.zking.model.User">
  <id column="user_id" property="userId" javaType="java.lang.Long"/>
  <result column="username" property="username" javaType="java.lang.String"/>
  <result column="password" property="password" javaType="java.lang.String" />
  <result column="realName" property="realname" javaType="java.lang.String" />
  <result column="phone" property="phone" javaType="java.lang.String" />
  <result column="salt" property="salt" javaType="java.lang.String" />
  <result column="locked" property="locked" javaType="java.lang.Integer" />
  <result column="create_datetime" property="createDatetime" javaType="java.util.Date" />
  <association property="roles" javaType="com.zking.model.Role">
    <id column="role_id" property="roleId" javaType="java.lang.Long" />
    <result column="role_name" property="roleName" javaType="java.lang.String" />
    <result column="available" property="available" javaType="java.lang.Integer" />
    <result column="description" property="description" javaType="java.lang.String" />


  </association>

</resultMap>



  <sql id="Base_Column_List" >
    user_id, username, password, realName, phone, salt, locked, create_datetime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>



  <select id="list" resultMap="row">
     select u.*,r.role_id,r.role_name from sys_user u
     inner join sys_user_role ur on u.user_id=ur.user_id
     inner join sys_role r on r.role_id=ur.role_id
  </select>

  <select id="load" resultMap="row">

        select u.*,r.role_id,r.role_name from sys_user u
     inner join sys_user_role ur on u.user_id=ur.user_id
     inner join sys_role r on r.role_id=ur.role_id and r.role_name=#{user}


  </select>
  <select id="listById" resultMap="row">
   select r.* from sys_role r,sys_user_role ur
   where r.role_id=ur.role_id and user_id=#{user_id}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zking.model.User" >
    insert into sys_user (user_id, username, password, 
      realName, phone, salt, 
      locked, create_datetime)
    values (#{userId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{locked,jdbcType=INTEGER}, #{createDatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zking.model.User" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="realname != null" >
        realName,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="locked != null" >
        locked,
      </if>
      <if test="createDatetime != null" >
        create_datetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=INTEGER},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.model.User" >
    update sys_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=INTEGER},
      </if>
      <if test="createDatetime != null" >
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.model.User" >
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=INTEGER},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>